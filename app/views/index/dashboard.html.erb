<div id="ee-title-container"><%= HumanizeHelper.latest_session_topic('Dropbox') %></div>
<div id="ee-subtitle-container"><%= HumanizeHelper.latest_session_date('Dropbox') %></div>
<div id="biggy-container">
  <div id="carousel-container">
      <div id="left-arrow-container">
          <!-- need to make arrow clickable and show another highcharts -->
        <a href='#'><i class="fa fa-angle-left fa-5x" style="color: black;"></i></a>
      </div>
      <div id="main-chart-container"></div>
      <div id="right-arrow-container">
          <!-- SLAP IN HELPER METHOD TO ADJUST COLOR -->
          <!-- so if false, show arrow with gray, else show arrow with black. needs in line css bc of bootstrap -->
            <i class="fa fa-angle-right fa-5x" style="color: #f3f3f3;"></i>
      </div>
  </div><br><br>

  <div id="overall-charts-container">
    <div id="gauge-container">
      <div id="gauge-header">
        <div>Overall Averages</div>
      </div>
      <div id="activity-gauge-container"></div>
    </div>

    <div id="growth-container">
      <div id="growth-header">
        <div>Progression</div>
      </div>
      <div id="area-chart-container"></div>
    </div>
  </div>
</div>

<div id="extra-space"></div>

<div id="script-container">
  <script id="highcharts-script">

        mainHighchartsGenerator(
          {
            chartId: 'main-chart-container',
            qOneBeforeAvg: <%= HumanizeHelper.avg_before_question('Dropbox', 4, 1) %>,
            qTwoBeforeAvg: <%= HumanizeHelper.avg_before_question('Dropbox', 4, 2) %>,
            qThreeBeforeAvg: <%= HumanizeHelper.avg_before_question('Dropbox', 4, 3) %>,
            qOneAfterAvg: <%= HumanizeHelper.avg_after_question('Dropbox', 4, 1) %>,
            qTwoAfterAvg: <%= HumanizeHelper.avg_after_question('Dropbox', 4, 2) %>,
            qThreeAfterAvg: <%= HumanizeHelper.avg_after_question('Dropbox', 4, 3) %>
          }
        );

        areaHighChartsGenerator({
          chartId: 'area-chart-container'
        });

        activityGaugeHighchartsGenerator({
          chartId: 'activity-gauge-container'
        })

  // function to generate main chart
  function mainHighchartsGenerator(args) {
      // step 1: AJAX request (on page load)
      // step 2: create highchart in the callback
      Highcharts.chart(args.chartId, {
          chart: {
              type: 'column'
          },
            title: {
              text: ""
            },
          xAxis: {
              categories: [
                  'My surroundings promote a productive and collaborative environment.',
                  'I feel supported and accepted by my coworkers.',
                  'I value and respect diversity in gender, age, and culture.'
              ],
              labels: {
                style: {
                  fontSize: '16px',
                  // fontWeight: 'bold'
                }
              },
              crosshair: true
          },
          yAxis: {
              min: 0,
              title: {
                  text: 'Average Value'
              }
          },
          tooltip: {
              headerFormat: '<span style="font-size:15px, width: 5em;">{series.question}</span><table>',
              // pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                  // '<td style="padding:0"><b>{point.y:.1f}</b></td></tr>',
              footerFormat: '</table>',
              // shared: true,
              useHTML: true
          },
          // tooltip: {
          //   formatter: function() {
          //     return 'I feel supported and accepted by my coworkers.'
          //   }
          // },
          plotOptions: {
              column: {
                  pointPadding: 0.2,
                  borderWidth: 0
              }
          },
          series: [{
              name: 'Before-survey',
              data: [args.qOneBeforeAvg, args.qTwoBeforeAvg, args.qThreeBeforeAvg],
              question: ["Q1", "Q2", "Q3"]

          }, {
              name: 'After-survey',
              data: [args.qOneAfterAvg, args.qTwoAfterAvg, args.qThreeAfterAvg]

          }

          // , {
          //     name: 'Something else',
          //     data: [2, 3, 6]
          //
          // }
        ]
     }
    );
  };

  // function to generate peripheral area chart
  function areaHighChartsGenerator(args) {
      Highcharts.chart(args.chartId, {
          chart: {
              type: 'areaspline'
          },
          title: {
              text: ''
          },
          legend: {
              layout: 'vertical',
              align: 'left',
              verticalAlign: 'top',
              x: 150,
              y: 100,
              floating: true,
              borderWidth: 1,
              backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'
          },
          xAxis: {
              categories: [
                  'Oct 21',
                  'Oct 28',
                  'Nov 4',
                  'Nov 11',
              ]
          },
          yAxis: {
              title: {
                  text: 'Average Value'
              }
          },
          tooltip: {
              shared: true,
              valueSuffix: ' units'
          },
          credits: {
              enabled: false
          },
          plotOptions: {
              areaspline: {
                  fillOpacity: 0.5
              }
          },
          series: [{
              name: 'After',
              data: [3, 4, 10, 12]
          }, {
              name: 'Before',
              data: [1, 3, 5, 4]
          }]
      });
  };

  // function to generate peripheral activity gauge chart
  function activityGaugeHighchartsGenerator(args) {

      Highcharts.chart(args.chartId, {

          chart: {
              type: 'solidgauge',
              marginTop: 50
          },

          title: {
              text: ''
          },

          tooltip: {
              borderWidth: 0,
              backgroundColor: 'none',
              shadow: false,
              style: {
                  fontSize: '16px',
                  color: '#000'
              },
              pointFormat: '{series.name}<br><span style="font-size:2em; color: {point.color}; font-weight: bold">{point.y}</span>',
              positioner: function (labelWidth) {
                  return {
                      x: 350 - labelWidth / 2,
                      y: 180
                  };
              }
          },

          pane: {
              startAngle: 0,
              endAngle: 360,
              background: [{ // Track for Move
                  outerRadius: '112%',
                  innerRadius: '88%',
                  backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.3).get(),
                  borderWidth: 0
              }, { // Track for Exercise
                  outerRadius: '87%',
                  innerRadius: '63%',
                  backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[1]).setOpacity(0.3).get(),
                  borderWidth: 0
              }, { // Track for Stand
                  outerRadius: '62%',
                  innerRadius: '38%',
                  backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[2]).setOpacity(0.3).get(),
                  borderWidth: 0
              }]
          },

          yAxis: {
              min: 0,
              max: 7,
              lineWidth: 0,
              tickPositions: []
          },

          plotOptions: {
              solidgauge: {
                  borderWidth: '34px',
                  dataLabels: {
                      enabled: false
                  },
                  linecap: 'round',
                  stickyTracking: false
              }
          },

          series: [{
              name: 'Q #1',
              borderColor: Highcharts.getOptions().colors[0],
              data: [{
                  color: Highcharts.getOptions().colors[0],
                  radius: '100%',
                  innerRadius: '100%',
                  y: 5.3
              }]
          }, {
              name: 'Q #2',
              borderColor: Highcharts.getOptions().colors[1],
              data: [{
                  color: Highcharts.getOptions().colors[1],
                  radius: '75%',
                  innerRadius: '75%',
                  y: 4.9
              }]
          }, {
              name: 'Q #3',
              borderColor: Highcharts.getOptions().colors[2],
              data: [{
                  color: Highcharts.getOptions().colors[2],
                  radius: '50%',
                  innerRadius: '50%',
                  y: 4.5
              }]
          }]
      },

      /**
       * In the chart load callback, add icons on top of the circular shapes
       */
      function callback() {
      });


  };
  </script>
</div>
